from weapons import Weapon
from weapons.weapon_stats import weapon_characteristics

weapon_library = {}

# Optional sound file map for auto-assigning based on weapon key
weapon_sfx_map = {
    "rifle": {
        "sound_fire": "assets/sounds/rifle_fire.wav",
        "sound_reload": "assets/sounds/rifle_reload.wav",
        "animation_reload": "reload_rifle",
    },
    "shotgun": {
        "sound_fire": "assets/sounds/shotgun_fire.wav",
        "sound_reload": "assets/sounds/shotgun_reload.wav",
        "animation_reload": "reload_shotgun",
    },
    "sniper": {
        "sound_fire": "assets/sounds/sniper_fire.wav",
        "sound_reload": "assets/sounds/sniper_reload.wav",
        "animation_reload": "reload_sniper",
    },
    "pistol": {
        "sound_fire": "assets/sounds/pistol_fire.wav",
        "sound_reload": "assets/sounds/pistol_reload.wav",
        "animation_reload": "reload_pistol",
    },
    "smg": {
        "sound_fire": "assets/sounds/smg_fire.wav",
        "sound_reload": "assets/sounds/smg_reload.wav",
        "animation_reload": "reload_smg",
    }
}

def build_weapon_library():
    for key, stats in weapon_characteristics.items():
        weapon_data = {
            "name": key.title(),
            "category": "Primary" if stats.get("ammo_capacity") and stats.get("damage", 0) >= 25 else "Secondary",
            "description": f"Autogenerated stats for {key}.",
            "range": 60 if stats["range"] == "medium" else 90 if stats["range"] == "long" else 30,
            "damage": stats["damage"],
            "fire_rate": stats["fire_rate"],
            "reload_time": stats["reload_time"],
            "ammo_capacity": stats["ammo_capacity"],
            "reserve_ammo": stats.get("reserve_ammo", 0)
        }

        # Attach sound and animation FX if available
        if key in weapon_sfx_map:
            weapon_data.update(weapon_sfx_map[key])

        weapon_library[key] = Weapon(weapon_data)

build_weapon_library()
